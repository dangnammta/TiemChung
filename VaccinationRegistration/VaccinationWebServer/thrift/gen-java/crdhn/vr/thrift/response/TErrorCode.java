/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package crdhn.vr.thrift.response;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TErrorCode implements org.apache.thrift.TEnum {
  EC_OK(0),
  EC_SYSTEM(1),
  EC_PARAM_ERROR(2),
  EC_NOT_ALLOWED(3),
  EC_PIN_REGISTERED(10),
  EC_REGISTRATION_FULL(11),
  EC_REGISTRATION_AVAILABLE(20),
  EC_REGISTRATION_PENDING(21),
  EC_REGISTRATION_DISABLE(22),
  EC_EVENT_INFO(101),
  EC_REGISTRATION_INFO(102),
  EC_DAILY_REGISTRATIONS(103),
  EC_DAILY_INJECTION(104),
  EC_LIST_EVENTS(105),
  EC_VACCINE_INFO(106),
  EC_CENTRE_INFO(107),
  EC_COMMON_STORE(108);

  private final int value;

  private TErrorCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TErrorCode findByValue(int value) { 
    switch (value) {
      case 0:
        return EC_OK;
      case 1:
        return EC_SYSTEM;
      case 2:
        return EC_PARAM_ERROR;
      case 3:
        return EC_NOT_ALLOWED;
      case 10:
        return EC_PIN_REGISTERED;
      case 11:
        return EC_REGISTRATION_FULL;
      case 20:
        return EC_REGISTRATION_AVAILABLE;
      case 21:
        return EC_REGISTRATION_PENDING;
      case 22:
        return EC_REGISTRATION_DISABLE;
      case 101:
        return EC_EVENT_INFO;
      case 102:
        return EC_REGISTRATION_INFO;
      case 103:
        return EC_DAILY_REGISTRATIONS;
      case 104:
        return EC_DAILY_INJECTION;
      case 105:
        return EC_LIST_EVENTS;
      case 106:
        return EC_VACCINE_INFO;
      case 107:
        return EC_CENTRE_INFO;
      case 108:
        return EC_COMMON_STORE;
      default:
        return null;
    }
  }
}
